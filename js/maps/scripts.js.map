{"version":3,"sources":["scripts.js"],"names":[],"mappingsfile":"../scripts.js","sourcesContent":["$(document).ready(function(){\n\n\t// ==============================================================*/\n\t// Remove loading class to \"note\" document is ready\n\t// ==============================================================*/\n\n\t$('body').removeClass('loading');\n\n\t// ==============================================================*/\n\t// Create node and insert SVG file after the body\n\t// ==============================================================*/\n\n\t// Remove local file and uncomment below once on the dev server\n\n\t// $.get(\"./img/spritemap.svg\", function(data) {\n\t//   var div = document.createElement(\"div\");\n\t//   div.innerHTML = new XMLSerializer().serializeToString(data.documentElement);\n\t//   document.body.insertBefore(div, document.body.childNodes[0]);\n\t// });\n\n\t// ==============================================================*/\n\t// Range slider configurations\n\t// ==============================================================*/\n\n\tvar $document = $(document);\n\tvar selector = '[data-rangeslider]';\n\tvar $element = $(selector);\n\n\t// For ie8 support\n\tvar textContent = ('textContent' in document) ? 'textContent' : 'innerText';\n\n\t// Example functionality to demonstrate a value feedback\n\tfunction valueOutput(element) {\n\t\tvar value = element.value;\n\t\t//var output = element.parentNode.getElementsByTagName('output')[0] || element.parentNode.parentNode.getElementsByTagName('output')[0];\n\t\t//output[textContent] = value;\n\t}\n\n\t$document.on('input', 'input[type=\"range\"], ' + selector, function(e) {\n\t\t// valueOutput(e.target);\n\t});\n\n\t$element.rangeslider({\n\n\t    // Feature detection the default is `true`.\n\t    // Set this to `false` if you want to use\n\t    // the polyfill also in Browsers which support\n\t    // the native <input type=\"range\"> element.\n\t    polyfill: false,\n\n\t    // Default CSS classes\n\t    rangeClass: 'rangeslider',\n\t    disabledClass: 'rangeslider--disabled',\n\t    horizontalClass: 'rangeslider--horizontal',\n\t    verticalClass: 'rangeslider--vertical',\n\t    fillClass: 'rangeslider__fill',\n\t    handleClass: 'rangeslider__handle',\n\n\t    // Callback function\n\t    onInit: function() {\t\n\n\t    \t$('.rangeslider__handle').attr('data-value', '70').append('<span class=\"arrows\"></span>');\n\n\t    \t$('.range-content').each(function(e){\n\n\t    \t\t$this = $(this);\n\n\t    \t\tif ( ( 70 > $this.data('value-min') ) && ( 70 < $this.data('value-max')) ) {\n\t\t    \t\t\n\t\t    \t\t// $('.range-content').removeClass('active');\n\t\t    \t\t$this.addClass('active');\n\n\t\t    \t} else {\n\t\t    \t\t\n\t\t    \t}\n\n\t    \t});\n\n\t    },\n\n\t    // Callback function\n\t    onSlide: function(position, value) {\n\t    \t\n\t    \t// Current active range\n\t    \t$currentRange = this.$element;\n\n\t    \t// Current active ranges value\n\t    \t$currentRangeValue = this.value;\n\n\t    \t// Value containers\n\t    \t$newHomeValueContainer = $currentRange.closest('.range-input-content-wrapper').find($('.range-content .built-home .value-amount'));\n\t    \t$oldHomeValueContainer = $currentRange.closest('.range-input-content-wrapper').find($('.range-content .old-home .value-amount'));\n\t    \t$ratingContainer = $currentRange.closest('.range-input-content-wrapper').find($('.range-content .value'));\n\t    \t\n\t    \t// Updates the value within the range inner circle\n\t    \tthis.$element.next('.rangeslider').find('.rangeslider__handle').attr('data-value', value);\n\n\t    \t// Updates the value within the header in the range content div\n\t    \t$ratingContainer.text(value);\n\n\t    \t// Disables/enables the text and the ends of the ranges\n\t    \tif ( $currentRangeValue < 10) {\n\n\t    \t\tthis.$element.next('.rangeslider').addClass('disable-begin-status');\n\n\t    \t} else {\n\t\t\t\t\n\t\t\t\tthis.$element.next('.rangeslider').removeClass('disable-begin-status');\n\n\n\t    \t}\n\t    \tif ( $currentRangeValue > 140) {\n\n\t    \t\tthis.$element.next('.rangeslider').addClass('disable-end-status');\n\n\t    \t} else {\n\t\t\t\t\n\t\t\t\tthis.$element.next('.rangeslider').removeClass('disable-end-status');\n\n\n\t    \t}\n\n\t    \t// Calculates and updates the values of savings within the range content div if\n\t    \t// the value/score is \"better then\" 100. The lower the \"score\" the better\n\t\t\t\n\t    \tif ( $currentRangeValue < 100) {\n\n\n\t    \t\t// New home value\n\t    \t\tvar $newHomeCost = 2335,\n\t    \t\t\t$newHomeScore = value*17.73247,\n\t    \t\t\t$newHomeValue = $newHomeCost - $newHomeScore,\n\t    \t\t\t$newHomeValue = '$' + $newHomeValue.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n\n\t    \t\t\t$newHomeValueContainer.text($newHomeValue);\n\t    \t\t\t\n\n\t    \t\t\t$oldHomeValueContainer.text('$0');\n\n\t    \t} else {\n\n\t    \t\t// Old home value\n\t    \t\tvar $oldHomeCost = 125,\n\t    \t\t\t$oldHomeScore = value*7.73247,\n\t    \t\t\t$oldHomeValue = $oldHomeCost - $oldHomeScore,\n\t    \t\t\t$oldHomeValue = '$' + $oldHomeValue.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n\n\t    \t\t$newHomeValueContainer.text('$0');\n\n\t    \t\t$oldHomeValueContainer.text($oldHomeValue);\n\n\t    \t}\n\n    \t\t$currentRange.closest('.range-input-content-wrapper').find($('.range-content')).removeClass('active');\n\n    \t\t// Reset charts to 100% or 0%\n    \t\t$currentRange.closest('.range-input-content-wrapper').find($('.range-content .pie')).each(function(pie) {\n\t\t\t\t\n\t\t\t\t$this = $(this);\n\n\t\t\t\t$this.find('circle').attr(\"stroke-dasharray\", \"100 100\");\n\n\t\t\t});\n\n\n\t    \t$('.range-content').each(function(e){\n\n\t    \t\t$rangeContent = $(this);\n\n\t    \t\tif ( ( $currentRangeValue > $rangeContent.data('value-min') ) && ( $currentRangeValue < $rangeContent.data('value-max')) ) {\n\t    \t\t\t\t\n\t\t    \t\t$currentRange.closest('.range-input-content-wrapper').find($rangeContent).addClass('active');\n\n\n\n\t\t    \t\t// Change chart value to animate to value on .pie element\n\t\t    \t\t$currentRange.closest('.range-input-content-wrapper').find('.pie').each(function(pie) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$this = $(this);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = $this.data('chart-value');\n\t\t\t\t\t\n\t\t\t\t\t\t$circle = $this.find('circle');\n\n\t\t\t\t\t\t$this.find('circle').attr(\"stroke-dasharray\", value + \" 100\");\n\n\t\t\t\t\t});\n\n\t\t    \t} \n\n\t    \t});\n\n\n\t    },\n\n\t    // Callback function\n\t    onSlideEnd: function(position, value) {\n\n\t    \t// Current active range\n\t    \t$currentRange = this.$element;\n\n\t    \t// Current active ranges value\n\t    \t$currentRangeValue = this.value;\n\n    \t\t$currentRange.closest('.range-input-content-wrapper').find($('.range-content')).removeClass('active');\n\n    \t\t// Reset charts to 100% or 0%\n    \t\t$currentRange.closest('.range-input-content-wrapper').find($('.range-content .pie')).each(function(pie) {\n\t\t\t\t\n\t\t\t\t$this = $(this);\t\n\n\t\t\t\t$this.find('circle').attr(\"stroke-dasharray\", \"100 100\");\n\n\t\t\t});\n\n\t    \t$('.range-content').each(function(e){\n\n\t    \t\t$rangeContent = $(this)\n\n\t    \t\tif ( ( $currentRangeValue > $rangeContent.data('value-min') ) && ( $currentRangeValue < $rangeContent.data('value-max')) ) {\n\t    \t\t\t\t\n\t\t    \t\t$currentRange.closest('.range-input-content-wrapper').find($rangeContent).addClass('active');\n\n\t\t    \t\t// Change chart value to animate to value on .pie element\n\t\t    \t\t$currentRange.closest('.range-input-content-wrapper').find($('.range-content .pie')).each(function(pie) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$this = $(this);\n\t\t\t\t\t\tvar value = $this.data('chart-value');\n\t\t\t\t\t\n\t\t\t\t\t\t$circle = $this.find('circle');\n\t\t\t\t\t\t$this.find('circle').attr(\"stroke-dasharray\", value + \" 100\");\n\n\t\t\t\t\t});\n\n\t\t    \t} \n\n\t    \t});\n\n    \t\tif ( ( $currentRangeValue < $this.data('value-min') ) || ( $currentRangeValue > $this.data('value-max')) ) {\n\t    \t\t\n\t    \t\tif( $this.hasClass('active') ) {\n\n\t    \t\t\t$this.addClass('disabled');\n\n\t    \t\t} \n\n\t    \t}\n\t    }\n\n\t});\n\n\t// ==============================================================*/\n\t// Chart generation\n\t// ==============================================================*/\n\n\n\tfunction createSvgEl(tag) {\n\t    return document.createElementNS('http://www.w3.org/2000/svg', tag);\n\t}\n\n\t$('.pie').each(function() {\n\t\t$this = $(this);\n\t\tvar value = $this.data('chart-value');\n\t\tvar svg = createSvgEl('svg');\n\t\tvar circle = createSvgEl('circle');\n\t\tvar title = createSvgEl('title');\n\t\tcircle.setAttribute(\"r\", \"16\");\n\t\tcircle.setAttribute(\"cx\", \"16\");\n\t\tcircle.setAttribute(\"cy\", \"16\");\n\t\tcircle.setAttribute(\"stroke-dasharray\", \"100 100\");\n\t\tsvg.setAttribute(\"viewBox\", \"0 0 32 32\");\n\t\t// title.text(p);\n\t\tsvg.append(title);\n\t\tsvg.append(circle);\n\t\t$this.append(svg);\n\t\tsetTimeout(function(){ \n\t\t\tcircle.setAttribute(\"stroke-dasharray\", value + \" 100\");\n\t\t}, 100);\n\t});\n\n\t$('.bar').each(function() {\n\t\t$this = $(this);\n\t\tvar value = $this.data('chart-value');\n\t\tvar svg = createSvgEl('svg');\n\t\tvar rectangle = createSvgEl('rect');\n\t\tvar title = createSvgEl('title');\n\t\tvar cost = $this.find('.cost');\n\t\trectangle.setAttribute(\"height\", \"100%\");\n\t\trectangle.setAttribute(\"width\", \"0\");\n\t\t// rectangle.setAttribute(\"cy\", \"16\");\n\t\t// svg.setAttribute(\"viewBox\", \"0 0 200 25\");\n\t\t// title.text(p);\n\t\tsvg.append(title);\n\t\tsvg.append(rectangle);\n\t\t$this.append(svg);\n\t\t// setTimeout(function(){ \n\t\t// \trectangle.setAttribute(\"width\", value+'%' );\n\t\t// \tcost.css({'left': value+'%'});\n\t\t// }, 100);\n\t});\n\n\tvar watchers = $('.bar').map(function(i, element) {\n\n\t\tvar watcher = scrollMonitor.create( element );\n\n\t\twatcher.lock();\n\n\t\tif (watcher.isInViewport) {\n\n\t\t\t$('.bar').each(function() {\n\n\t\t\t\t$this = $(this);\n\t\t\t\tvar value = $this.data('chart-value');\n\t\t\t\tvar cost = $this.find('.cost');\n\t\t\t\tvar rectangle = $this.find('svg rect');\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\trectangle.attr({'width': value+'%'});\n\t\t\t\t\tcost.css({'left': value+'%'});\n\t\t\t\t}, 250);\n\t\t\t});\n\t\t\t\t\t\t\n\t\t} else if (watcher.isBelowViewport) {\n\n\t\t\twatcher.fullyEnterViewport(function() {\n\n\t\t\t\t$('.bar').each(function() {\n\t\t\t\t\t$this = $(this);\n\t\t\t\t\tvar value = $this.data('chart-value');\n\t\t\t\t\tvar cost = $this.find('.cost');\n\t\t\t\t\tvar rectangle = $this.find('svg rect');\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\trectangle.attr({'width': value+'%'});\n\t\t\t\t\t\tcost.css({'left': value+'%'});\n\t\t\t\t\t}, 250);\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\twatcher.exitViewport(function() {\n\n\t\t\t\t$('.bar').each(function() {\n\t\t\t\t\t$this = $(this);\n\t\t\t\t\tvar value = $this.data('chart-value');\n\t\t\t\t\tvar cost = $this.find('.cost');\n\t\t\t\t\tvar rectangle = $this.find('svg rect');\n\t\t\t\t\t\trectangle.attr({'width': '0%'});\n\t\t\t\t\t\tcost.css({'left': '0%'});\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t} \n\n\t\treturn watcher;\n\n\t});\n\n\n});\n\n"]}